(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{813:function(e,v,a){"use strict";a.r(v);var _=a(4),t=Object(_.a)({},(function(){var e=this,v=e.$createElement,a=e._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("blockquote",[a("p",[e._v("转载自蒋鹏飞的《轻松理解http缓存策略》 https://segmentfault.com/u/jiangpengfei_5ecce944a3d8a")])]),e._v(" "),a("p",[a("strong",[a("code",[e._v("HTTP")]),e._v("缓存策略只是为了解决客户端和服务端信息不对称的问题而存在的，客户端为了加快速度会缓存部分资源，但是下次请求时，客户端不知道这个资源有没有更新，服务端也不知道客户端缓存的是哪个版本，不知道该不该再返回资源，其实就是一个信息同步问题，"),a("code",[e._v("HTTP")]),e._v("缓存策略就是来解决这个问题的")]),e._v("。如果我们跳出这种纯粹的技术思维，我们会发现生活中这种信息同步问题也很常见。而我们解决这些问题的思路很多时候都是司空见惯了，如果从这个角度来说，这个问题就很好理解！”")]),e._v(" "),a("p",[e._v("于是我给他讲了一个我小时候租光碟看奥特曼的故事。")]),e._v(" "),a("h2",{attrs:{id:"租光碟看奥特曼"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#租光碟看奥特曼"}},[e._v("#")]),e._v(" 租光碟看奥特曼")]),e._v(" "),a("p",[e._v("事情是这样的，我小时候特别喜欢看动画片，尤其是奥特曼，但是那时候没有电脑啊，也没有网络。我只有一台DVD播放机，于是我会经常跑去租光碟的店租奥特曼。")]),e._v(" "),a("h3",{attrs:{id:"etag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[e._v("#")]),e._v(" ETag")]),e._v(" "),a("p",[e._v("某天，我看完了《艾斯奥特曼》"),a("strong",[e._v("第10集")]),e._v("，我还想继续看。于是我找到了光碟店的老板：“老板，"),a("strong",[e._v("第10集")]),e._v("我看完了哦，你还有没有新的啊？”老板说：“有有有，刚出了"),a("strong",[e._v("第11集")]),e._v("，你拿去吧！”")]),e._v(" "),a("p",[a("strong",[e._v("上面这一个简单的交流过程其实就包含了一个"),a("code",[e._v("HTTP")]),e._v("的缓存技术，那就是"),a("code",[e._v("ETag")])]),e._v("！类比于网络请求，我其实就是客户端，光碟店就是服务端，我去租光碟就相当于发起一个请求。但是我去租光碟时，老板并不知道我看到哪集了，我们的信息是不同步的。所以我告诉了他一个标记("),a("code",[e._v("Tag")]),e._v(")，在这里这个标记就是"),a("strong",[e._v("第10集")]),e._v("，老板拿到这个标记，跟他自己库存的标记比较一下，发现他最新标记是"),a("strong",[e._v("第11集")]),e._v("，于是知道有更新了，将"),a("strong",[e._v("第11集")]),e._v("给了我。")]),e._v(" "),a("h3",{attrs:{id:"last-modified-if-modified-since"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[e._v("#")]),e._v(" Last-Modified & If-Modified-Since")]),e._v(" "),a("p",[e._v("再来，我《艾斯奥特曼》看完了，我开始看《泰罗奥特曼》了。可是老板这次比较鸡贼，《泰罗奥特曼》没买正版的，是他自己翻录的，他翻录的时候自己也不知道是第几集，但是他聪明的在光盘上写上了翻录日期。于是我正在看的这盘也没啥封面，只光秃秃的写了一个"),a("strong",[e._v("2000年12月1日")]),e._v("。当我这盘看完了，我又去找老板了：“老板，你这个"),a("strong",[e._v("2000年12月1日")]),e._v("的我已经看完了，你还有没有新的啊？”这里的"),a("strong",[e._v("2000年12月1日")]),e._v("其实就是标记了我手上副本的更新日期，这也对应了"),a("code",[e._v("HTTP")]),e._v("的一个缓存技术，"),a("strong",[e._v("那就是"),a("code",[e._v("Last-Modified")]),e._v("和"),a("code",[e._v("If-Modified-Since")])]),e._v("。你可以理解为，老板给日期还取了一个名字，叫"),a("code",[e._v("Last-Modified")]),e._v("，所以光碟上完整文字是"),a("code",[e._v("Last-Modified:2000年12月1日")]),e._v("，而我去问的时候就这么问：“Do you have any updates IF-Modified-Since 2000年12月1日？”。")]),e._v(" "),a("h3",{attrs:{id:"expires和max-age"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires和max-age"}},[e._v("#")]),e._v(" Expires和Max-Age")]),e._v(" "),a("p",[e._v("继续，我《泰罗奥特曼》也看完了，开始看《雷欧奥特曼》了。这《雷欧奥特曼》跟前面两个都不一样，我去租的时候老板就说了：“你小子别天天跑来问了！《雷欧奥特曼》我每周去进一次货，你每周一来拿就行！”"),a("strong",[e._v("这句话也对应了一个"),a("code",[e._v("HTTP")]),e._v("缓存技术，那就是"),a("code",[e._v("Expires")]),e._v("和"),a("code",[e._v("Max-Age")])]),e._v("。我知道了下周一之前，我手上都是最新的，到了下周一就过期("),a("code",[e._v("Expire")]),e._v(")了。所以“我手上的是最新的”这个说法有个生命周期，他的年龄是有限的，他的年龄等于下周一更新时间减去当前时间，这就是他的最大年龄("),a("code",[e._v("Max-Age")]),e._v(")。")]),e._v(" "),a("h3",{attrs:{id:"immutable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immutable"}},[e._v("#")]),e._v(" Immutable")]),e._v(" "),a("p",[e._v("再来一个，我《雷欧奥特曼》也看完了，开始看《奈克斯特奥特曼》了。这《奈克斯特奥特曼》跟前面几个都不一样，我去租的时候老板说了：“小子，你这次运气好，这《奈克斯特奥特曼》已经出完了，你全部拿去吧，也不用天天跑来问了！”这句话对应的"),a("code",[e._v("HTTP")]),e._v("缓存技术是啥？"),a("strong",[e._v("当然是Immutable")]),e._v("！"),a("code",[e._v("Immutable")]),e._v("就跟字面意思一样，不可变的！就像《奈克斯特奥特曼》一样，已经出完了，不用再去问更新了。")]),e._v(" "),a("h2",{attrs:{id:"言归正传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#言归正传"}},[e._v("#")]),e._v(" 言归正传")]),e._v(" "),a("p",[e._v("扯蛋到这里结束，咱们言归正传！之所以举这么个例子，是为了说明"),a("code",[e._v("HTTP")]),e._v("缓存技术要解决的问题在生活中很常见，从这些常见的场景入手，理解起来更简单。下面我们正儿八经的来说说"),a("code",[e._v("HTTP")]),e._v("缓存技术：")]),e._v(" "),a("h3",{attrs:{id:"两种机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种机制"}},[e._v("#")]),e._v(" 两种机制")]),e._v(" "),a("p",[e._v("从上面的几个小例子可以看出，有时候为了知道是不是有更新，我必须去问老板，比如第一个例子里面：“老板，"),a("strong",[e._v("第10集")]),e._v("我看完了哦，你还有没有新的啊？”。这种为了知道有没有更新，必须跟服务端沟通过才知道的，我们称之为"),a("strong",[e._v("协商缓存")]),e._v("。还有些场景，我不去问就知道有没有更新，比如第三个例子，因为知道是周更的，当周一来之前，我都不会去问了，到了周一再去问，这种不用跟服务器协商直接用本地副本的叫做"),a("strong",[e._v("强制缓存")]),e._v("。换成技术的话说就是，"),a("strong",[e._v("强制缓存")]),e._v("不用发请求直接用本地缓存，"),a("strong",[e._v("协商缓存")]),e._v("要发请求去问服务器有没有更新。下面我们详细来讲下这两种缓存：")]),e._v(" "),a("h3",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[e._v("#")]),e._v(" 协商缓存")]),e._v(" "),a("p",[e._v("前面第一个例子和第二个例子每次都需要向服务器端询问，所以是"),a("strong",[e._v("协商缓存")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"etag和if-none-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag和if-none-match"}},[e._v("#")]),e._v(" ETag和If-None-Match")]),e._v(" "),a("p",[a("code",[e._v("ETag")]),e._v("是URL的"),a("code",[e._v("Entity Tag")]),e._v("，就是一个URL资源的标识符，类似于文件的"),a("code",[e._v("md5")]),e._v("，计算方式也类似，当服务器返回时，可以根据返回内容计算一个"),a("code",[e._v("hash")]),e._v("值或者就是一个数字版本号，类似于我们的"),a("code",[e._v("第10集")]),e._v("，具体返回什么值要看服务器的计算策略。然后将它"),a("strong",[e._v("加到"),a("code",[e._v("response")]),e._v("的"),a("code",[e._v("header")]),e._v("里面")]),e._v("，可能长这样：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("ETag"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"33a64df551425fcc55e4d42a148795d9f25f89d4"')]),e._v("\n")])])]),a("p",[e._v("客户端拿到后会将这个"),a("code",[e._v("ETag")]),e._v("和返回值一起存下来，等下次请求时，使用配套的"),a("code",[e._v("If-None-Match")]),e._v("，将这个"),a("strong",[e._v("放到"),a("code",[e._v("request")]),e._v("的"),a("code",[e._v("header")]),e._v("里面")]),e._v("，可能长这样：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("If"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("None"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Match"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"33a64df551425fcc55e4d42a148795d9f25f89d4"')]),e._v("\n")])])]),a("p",[e._v("然后服务端拿到请求里面的"),a("code",[e._v("If-None-Match")]),e._v("跟当前版本的"),a("code",[e._v("ETag")]),e._v("比较下：")]),e._v(" "),a("ol",[a("li",[e._v("如果是一样的话，直接返回"),a("code",[e._v("304")]),e._v("，语义为"),a("code",[e._v("Not Modified")]),e._v("，不返回内容("),a("code",[e._v("body")]),e._v(")，只返回"),a("code",[e._v("header")]),e._v("，告诉浏览器直接用缓存。")]),e._v(" "),a("li",[e._v("如果不一样的话，返回"),a("code",[e._v("200")]),e._v("和最新的内容")])]),e._v(" "),a("p",[e._v("与"),a("code",[e._v("ETag")]),e._v("配套的还有一个不太常用的"),a("code",[e._v("request header")]),e._v("----"),a("code",[e._v("If-Match")]),e._v("，这个和前面"),a("code",[e._v("If-None-Match")]),e._v("的语义是相反的。前面"),a("code",[e._v("If-None-Match")]),e._v("的语义是"),a("strong",[e._v("如果不匹配就下载")]),e._v("。而"),a("code",[e._v("If-Match")]),e._v("通常用于"),a("code",[e._v("post")]),e._v("或者"),a("code",[e._v("put")]),e._v("请求中，语义为"),a("strong",[e._v("如果匹配才提交")]),e._v("，比如你在编辑一个商品，其他人也可能同时在编辑。当你提交编辑时，其他人可能已经先于你提交了，这时候服务端的"),a("code",[e._v("ETag")]),e._v("就已经变了，"),a("code",[e._v("If-Match")]),e._v("就不成立了，这时候服务端会给你返回"),a("code",[e._v("412")]),e._v("错误，也就是"),a("code",[e._v("Precondition Failed")]),e._v("，前提条件失败。如果"),a("code",[e._v("If-Match")]),e._v("成立，就正常返回"),a("code",[e._v("200")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"last-modified-if-modified-since-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since-2"}},[e._v("#")]),e._v(" Last-Modified & If-Modified-Since")]),e._v(" "),a("p",[a("code",[e._v("Last-Modified")]),e._v("和"),a("code",[e._v("If-Modified-Since")]),e._v("也是配套使用的，类似于"),a("code",[e._v("ETag")]),e._v("和"),a("code",[e._v("If-None-Match")]),e._v("的关系。只不过"),a("code",[e._v("ETag")]),e._v("放的是一个版本号或者"),a("code",[e._v("hash")]),e._v("值，"),a("code",[e._v("Last-Modified")]),e._v("放的是资源的最后修改时间。"),a("strong",[a("code",[e._v("Last-Modified")]),e._v("是放到"),a("code",[e._v("response")]),e._v("的"),a("code",[e._v("header")]),e._v("里面的")]),e._v("，可能长这样：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("Last"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("21")]),e._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("28")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("00")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),e._v(" \n")])])]),a("p",[e._v("而客户端浏览器在使用时，应该将配套的"),a("code",[e._v("If-Modified-Since")]),e._v("放到**"),a("code",[e._v("request")]),e._v("的"),a("code",[e._v("header")]),e._v("里面**，长这样：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("If"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Since"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("21")]),e._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("28")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("00")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),e._v(" \n")])])]),a("p",[e._v("服务端拿到这个头后，会跟当前版本的修改时间进行比较：")]),e._v(" "),a("ol",[a("li",[e._v("当前版本的修改时间比这个晚，也就是这个时间后又改过了，返回"),a("code",[e._v("200")]),e._v("和新的内容")]),e._v(" "),a("li",[e._v("当前版本的修改时间和这个一样，也就是没有更新，返回"),a("code",[e._v("304")]),e._v("，不返回内容，只返回头，客户端直接使用缓存")])]),e._v(" "),a("p",[e._v("与"),a("code",[e._v("If-Modified-Since")]),e._v("对应的还有"),a("code",[e._v("If-Unmodified-Since")]),e._v("，"),a("code",[e._v("If-Modified-Since")]),e._v("可以理解为"),a("strong",[e._v("有更新才下载")]),e._v("，那"),a("code",[e._v("If-Unmodified-Since")]),e._v("就是"),a("strong",[e._v("没有更新才下载")]),e._v("。如果客户端传了"),a("code",[e._v("If-Unmodified-Since")]),e._v("，像这样：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("If"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Unmodified"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Since"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("21")]),e._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("28")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("00")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),e._v(" \n")])])]),a("p",[e._v("服务端拿到这个头后，也会跟当前版本的修改时间进行比较：")]),e._v(" "),a("ol",[a("li",[e._v("如果这个时间后没有更新，服务器返回"),a("code",[e._v("200")]),e._v("，并返回内容。")]),e._v(" "),a("li",[e._v("如果这个时间后有更新，其实就是这个"),a("code",[e._v("if")]),e._v("不成立，会返回错误代码"),a("code",[e._v("412")]),e._v("，语义为"),a("code",[e._v("Precondition Failed")])])]),e._v(" "),a("h4",{attrs:{id:"etag和last-modified优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag和last-modified优先级"}},[e._v("#")]),e._v(" ETag和Last-Modified优先级")]),e._v(" "),a("p",[a("code",[e._v("ETag")]),e._v("和"),a("code",[e._v("Last-Modified")]),e._v("都是协商缓存，都需要服务器进行计算和比较，那如果这两个都存在，用哪个呢？"),a("strong",[e._v("答案是"),a("code",[e._v("ETag")]),e._v("，"),a("code",[e._v("ETag")]),e._v("的优先级比"),a("code",[e._v("Last-Modified")]),e._v("高")]),e._v("。因为"),a("code",[e._v("Last-Modified")]),e._v("在设计上有个问题，那就是"),a("code",[e._v("Last-Modified")]),e._v("的精度只能到秒，如果一个资源频繁修改，在同一秒进行多次修改，你从"),a("code",[e._v("Last-Modified")]),e._v("上是看不出来区别的。但是"),a("code",[e._v("ETag")]),e._v("每次修改都会生成新的，所以他比"),a("code",[e._v("Last-Modified")]),e._v("精度高，更准确。但是"),a("code",[e._v("ETag")]),e._v("也不是完全没问题的，你的"),a("code",[e._v("ETag")]),e._v("如果设计为一个"),a("code",[e._v("hash")]),e._v("值，每次请求都要计算这个值，需要额外耗费服务器资源。具体使用哪一个，需要根据自己的项目情况来进行取舍。")]),e._v(" "),a("h3",{attrs:{id:"强制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[e._v("#")]),e._v(" 强制缓存")]),e._v(" "),a("p",[e._v("上面扯蛋那里的第三个例子和第四个例子就是强制缓存，就是我知道在某个时间段完全不用去问服务端，直接去用缓存就行。这两个例子里面提到的"),a("code",[e._v("Expires")]),e._v("是一个单独的"),a("code",[e._v("header")]),e._v("，"),a("code",[e._v("max-age")]),e._v("和"),a("code",[e._v("immutable")]),e._v("同属于"),a("code",[e._v("Cache-Control")]),e._v("这个"),a("code",[e._v("header")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"expires"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[e._v("#")]),e._v(" Expires")]),e._v(" "),a("p",[a("code",[e._v("Expires")]),e._v("比较简单，就是服务器"),a("code",[e._v("response")]),e._v("的"),a("code",[e._v("header")]),e._v("带上这个字段：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("Expires"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("21")]),e._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("28")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("00")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),e._v("\n")])])]),a("p",[e._v("然后在这个时间前，客户端浏览器都不会再发起请求，而是直接用缓存资源。")]),e._v(" "),a("h4",{attrs:{id:"cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[e._v("#")]),e._v(" Cache-Control")]),e._v(" "),a("p",[a("code",[e._v("Cache-Control")]),e._v("相对比较复杂，可设置属性也比较多，"),a("code",[e._v("max-age")]),e._v("只是其中一个属性，长这样：")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" max"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20000")]),e._v("\n")])])]),a("p",[e._v("这表示当前资源在"),a("code",[e._v("20000秒")]),e._v("内都不用再请求了，直接使用缓存。")]),e._v(" "),a("p",[e._v("上面提到的"),a("code",[e._v("immutable")]),e._v("也是"),a("code",[e._v("Cache-Control")]),e._v("的一个属性，但是是个实验性质的，各个浏览器兼容并不好。设置了"),a("code",[e._v("Cache-control: immutable")]),e._v("表示这辈子都用缓存了，再请求是不可能的了。")]),e._v(" "),a("p",[e._v("其他常用属性还有：")]),e._v(" "),a("p",[a("code",[e._v("no-cache")]),e._v("：使用缓存前，强制要求把请求提交给服务器进行验证(协商缓存验证)。")]),e._v(" "),a("p",[a("code",[e._v("no-store")]),e._v("：不存储有关客户端请求或服务器响应的任何内容，即不使用任何缓存。")]),e._v(" "),a("p",[e._v("另外"),a("code",[e._v("Cache-Control")]),e._v("还有很多属性，大家可以参考"),a("a",{attrs:{href:"https://link.segmentfault.com/?enc=xsrDZsHQJG3WDl8KrhhrKg%3D%3D.59haKPnqb4HRkOlDr1264ssdNTIk824NbYZcQe%2BPxTtkz7zWr2vxePvIB6uVfa%2FGvWp6WnPyEjV62n9D0mrVhoUA8K1rqvbtPk3HQGwU6OM%3D",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN的文档"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"expires和cache-control的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires和cache-control的优先级"}},[e._v("#")]),e._v(" Expires和Cache-Control的优先级")]),e._v(" "),a("p",[e._v("就一句话：如果在"),a("code",[e._v("Cache-Control")]),e._v("响应头设置了 "),a("code",[e._v("max-age")]),e._v(" 或者 "),a("code",[e._v("s-maxage")]),e._v(" 指令，那么 "),a("code",[e._v("Expires")]),e._v(" 头会被忽略。")]),e._v(" "),a("h3",{attrs:{id:"协商缓存和强制缓存优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存和强制缓存优先级"}},[e._v("#")]),e._v(" 协商缓存和强制缓存优先级")]),e._v(" "),a("p",[e._v("这个其实很好理解，协商缓存需要发请求跟服务器协商，强制缓存如果生效，根本就不会发请求。所以这个优先级就是："),a("strong",[e._v("先判断强制缓存，如果强制缓存生效，直接使用缓存；如果强制缓存失效，再发请求跟服务器协商，看要不要使用缓存")]),e._v("。")]),e._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("p",[e._v("本文从生活中常见的场景入手，阐述了"),a("code",[e._v("HTTP")]),e._v("缓存机制其实是提高访问速度和解决信息不同步的一种机制。这种信息不同步在生活中很常见，很多解决思路我们已经司空见惯，带着这种思维，我们可以很好的理解"),a("code",[e._v("HTTP")]),e._v("缓存机制。"),a("code",[e._v("HTTP")]),e._v("缓存机制要点如下：")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("HTTP")]),e._v("缓存机制分为"),a("strong",[e._v("强制缓存")]),e._v("和"),a("strong",[e._v("协商缓存")]),e._v("两类。")]),e._v(" "),a("li",[a("strong",[e._v("强制缓存")]),e._v("的意思就是不要问了(不发起请求)，直接用缓存吧。")]),e._v(" "),a("li",[a("strong",[e._v("强制缓存")]),e._v("常见技术有"),a("code",[e._v("Expires")]),e._v("和"),a("code",[e._v("Cache-Control")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("Expires")]),e._v("的值是一个时间，表示这个时间前缓存都有效，都不需要发起请求。")]),e._v(" "),a("li",[a("code",[e._v("Cache-Control")]),e._v("有很多属性值，常用属性"),a("code",[e._v("max-age")]),e._v("设置了缓存有效的时间长度，单位为"),a("code",[e._v("秒")]),e._v("，这个时间没到，都不用发起请求。")]),e._v(" "),a("li",[a("code",[e._v("immutable")]),e._v("也是"),a("code",[e._v("Cache-Control")]),e._v("的一个属性，表示这个资源这辈子都不用再请求了，但是他兼容性不好，"),a("code",[e._v("Cache-Control")]),e._v("其他属性可以参考"),a("a",{attrs:{href:"https://link.segmentfault.com/?enc=LcXnYQklmYuifWYiLvP4gw%3D%3D.xqbH8wqHFKgrgr13WydvJisLipxbXBzUMVmdp8KTW%2Fkh4j%2F7jsZ%2BmB4CP%2FND0%2BDNnOui5svaua2QdVjETJsJAbaAhY4QESW2VCLSfHLz2t0%3D",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN的文档"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("Cache-Control")]),e._v("的"),a("code",[e._v("max-age")]),e._v("优先级比"),a("code",[e._v("Expires")]),e._v("高。")]),e._v(" "),a("li",[a("strong",[e._v("协商缓存")]),e._v("常见技术有"),a("code",[e._v("ETag")]),e._v("和"),a("code",[e._v("Last-Modified")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("ETag")]),e._v("其实就是给资源算一个"),a("code",[e._v("hash")]),e._v("值或者版本号，对应的常用"),a("code",[e._v("request header")]),e._v("为"),a("code",[e._v("If-None-Match")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("Last-Modified")]),e._v("其实就是加上资源修改的时间，对应的常用"),a("code",[e._v("request header")]),e._v("为"),a("code",[e._v("If-Modified-Since")]),e._v("，精度为"),a("code",[e._v("秒")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("ETag")]),e._v("每次修改都会改变，而"),a("code",[e._v("Last-Modified")]),e._v("的精度只到"),a("code",[e._v("秒")]),e._v("，所以"),a("code",[e._v("ETag")]),e._v("更准确，优先级更高，但是需要计算，所以服务端开销更大。")]),e._v(" "),a("li",[a("strong",[e._v("强制缓存")]),e._v("和"),a("strong",[e._v("协商缓存")]),e._v("都存在的情况下，先判断"),a("strong",[e._v("强制缓存")]),e._v("是否生效，如果生效，不用发起请求，直接用缓存。如果"),a("strong",[e._v("强制缓存")]),e._v("不生效再发起请求判断"),a("strong",[e._v("协商缓存")]),e._v("。")])]),e._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料：")]),e._v(" "),a("p",[a("code",[e._v("ETag MDN")]),e._v("文档："),a("a",{attrs:{href:"https://link.segmentfault.com/?enc=DIyILjYOle54aKCcIZqsAA%3D%3D.J4UyQ%2B11DfKnpsqKREX71%2BY5YemKoRSZ4YW%2FB7Zsen2g3lv1IDHqeNa3LooCnSildGzc7YUGUtFsCn8bx91HYw%3D%3D",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("Last-Modified MDN")]),e._v("文档："),a("a",{attrs:{href:"https://link.segmentfault.com/?enc=VpQPECV2fawZR6ceTvA6kw%3D%3D.7yYetd2AST%2BoFeLDBEWtU%2FhGTzr1rSFPAPmO16Rk2IPNskz8wmr9WZW2UGIHtzgwNpRaf8DPsEIF00EmN9xG%2BkbrhHUz0350It3CsTs0Dxg%3D",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("Expires MDN")]),e._v("文档："),a("a",{attrs:{href:"https://link.segmentfault.com/?enc=JlUrjT2m17wlLYWgxfsHUA%3D%3D.m91mad2OyVH3v0tTunqJZOS2Vp9BrVDmwA5kAgfGScvEoGRl5g%2F6ZNj3mFeA9ZQVSV%2FMkwcsN7sZFUePURdxaKBeljNAYrkdB%2B2hmTwxAJU%3D",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("Cache-Control MDN")]),e._v("文档："),a("a",{attrs:{href:"https://link.segmentfault.com/?enc=sqBtINOJr8wej0Tx8dhn5g%3D%3D.SH%2F4acWqkP9YE0BXurI%2F8bAdJJVfc5i0L0Ac1BiuOtPSZvBtZsYGAUuQt0rsYLFzopCpi2hQd7YzyWwqXL59mujbXe%2B4z1mgSgxAZVl2Jn0%3D",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control"),a("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=t.exports}}]);